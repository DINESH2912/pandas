# -*- coding: utf-8 -*-
"""pandas

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t1CsMG1IUiJ57GgMoNEzWA334FqufEuM
"""

import pandas as pd
colors=pd.Series(["red","blue","yellow"])
colors

data=pd.read_csv("/content/MEDICAL insurance PRICE.csv")
data

data.to_csv()

data.dtypes

data.columns

data.describe()

data.index

data.info()

data.sum()

data.mean()

data["charges"].std()

len(data)

data

data.head()

data.tail()

data[:7]

animals=pd.Series(["cat","dog","buffalo","tiger"],index=[1,0,3,2])
animals

animals.loc[3]

animals.iloc[1]

# now we get the difference between the loc and the iloc
animals.iloc[:2]

data.head(4)

data["smoker"]

data[data["smoker"]=="no"].head()

pd.crosstab(data["sex"],data["smoker"])

data.groupby(data["sex"]).mean()

import matplotlib.pyplot as plt

data["children"].plot()

#for the histogram
data["children"].hist()

#manipulating data
car_sales=pd.read_csv(r"/content/car-sales-missing-data.csv")
car_sales

car_sales["Make"].str.lower()
car_sales

car_sales["Make"]=car_sales["Make"].str.lower()
car_sales
#now it changes into the lowercase letter

# suppose we have the empty value we will use the following functions
# we will use
car_sales_1=pd.read_csv(r"/content/car-sales-missing-data.csv")

car_sales=car_sales["Colour"].dropna(inplace=True)

car_sales

# if we need to fill the null value we use the fillna function line
car_sales_1

car_sales_1['Odometer'] = car_sales_1['Odometer'].fillna(car_sales_1['Odometer'].mean())
car_sales_1

# column from the series
seat_column=pd.Series([5,5,5,5,5])
car_sales_1["seats"]=seat_column
car_sales_1

car_sales_1.fillna(5.0)

# column from the python list
full_economy=[1,2,3,4,5,6,7,8,9,11]
car_sales_1["fuel per own"]=full_economy
car_sales_1

# inserting the another columns
car_sales_1["Total fuel"]=car_sales_1["Odometer"]/100*car_sales_1["fuel per own"]
car_sales_1

# shuffle the data we use
car_sales_1=car_sales_1.sample(frac=1)
car_sales_1

# shuffle the data we use
car_sales_1=car_sales_1.sample(frac=0.5)
car_sales_1



# in index there is the column of changed order index
# shuffle the data we use drop is true
car_sales_1.reset_index(drop=True,inplace=True)
car_sales_1

